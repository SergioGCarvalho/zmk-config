/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>


/ {

    behaviors {
        // Left Shift tap-dance Caps Word
        c_w_lf: c_w_lf {
            compatible = "zmk,behavior-tap-dance";
            tapping-term-ms = <300>;
            #binding-cells = <0>;
            bindings = <&kp LSHFT>, <&caps_word>;
        };
    };

    // combos {
        //     compatible = "zmk,combos";
        //     // Combo for Left + Right Shift triggering Caps Lock
        //     caps_lock_combo {
            //         timeout-ms = <50>;
            //         key-positions = <36 49>;
            //         bindings = <&kp CAPS>;
        //     };
    // };
    macros {
        lower_layer_macro: lower_layer_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
            <&macro_press &mo 1>  // Activate lower layer
            , <&macro_tap &rgb_ug RGB_COLOR_HSB(128,100,1)> // Change underglow to Blue when in Lower Layer
            , <&macro_release &mo 1>; // Release lower layer
        };
    };

    // Based on Colemak Mod-DH

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  ESC  | 0=≠    |  1!   |  2"@   |  3#€   |  4$£  |                   |  5%    |  6&¶  |  7/÷     |  8(    |  9)    |   <>≤   |
            // |  TAB  |  Qœ    |  W∑    |  Fƒ    |  Pπ    |  B∫   |                   |  J¯    |  L‘   |  U†      |  Oø    |  Y¥    |   ,;“   |
            // |  CTRL |  Aå    |  R®    |  Sß    |  T™    |  G˙   |                   |  Mµ    |  N¬   |  Eæ      |  Iı    |   |    |   .:…   |
            // | SHIFT |  Z     |  X«    |  C©    |  D     |  V√   | LOWER |   | RAISE |  K„    |  H    |  '"      |  <-    |   |    |  ->     |
            //                  |  ALT   |  GUI   |  ENTER | SPACE |                   | BSPC   |  (    |  )       | repeat |
            bindings = <
            &kp ESC      &kp EXCL &kp AT   &kp HASH &kp DLLR &kp PLUS                    &kp KP_EQUAL_AS400 &kp KP_DOT &kp KP_COMMA &kp KP_LPAR   &kp KP_RPAR   &kp KP_DIVIDE
            &kp TAB      &kp Q    &kp W    &kp F    &kp P    &kp B                       &kp J    &kp L    &kp U     &kp O    &kp Y    &kp COMMA
            &kp LCTRL    &kp A    &kp R    &kp S    &kp T    &kp G                       &kp M    &kp N    &kp E     &kp I    &kp UP   &kp GRAVE
            &c_w_lf      &kp Z    &kp X    &kp C    &kp D    &kp V   &mo 1       &mo 2   &kp K    &kp H    &kp APOS  &kp LEFT &kp DOWN &key_repeat
            &kp LALT     &kp LGUI &kp RET  &kp SPACE                                     &kp BSPC &kp LPAR &kp RPAR  &none
            >;
        };

        lower_layer {
            // ----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            // |  OUT_TOG |     BT1       |    BT2      |   BT3      |   BT4     |   BT5      |                   |  volup   |  voldown  |  vmute     |  vpause |  vprev  |  vnext  |
            // |   F1     |     F2        |    F3       |   F4       |   F5      |   F6       |                   |  F7      |  F8       |  F9        |  F10    |  F11    |  F12    |
            // |   <|!    |     "         |    #        |   $        |   %       |            |                   |  &       |  /        |  (         |  )      |   =     |  ">"    |
            // |   RGB-   |     RGB+      |             |            |           |            |        |  |       |          |  _        |  +         |  ª      |   `     |  "|"    |
            //                            |    BTCLR    |            |           |   K_LOCK   |                   |          |           |            |         |
            bindings = <
            &out OUT_TOG    &bt BT_SEL 0    &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                    &kp K_MUTE &kp K_VOL_DN &kp K_VOL_UP &kp C_PP &kp C_PREV &kp C_NEXT
            &kp F1          &kp F2          &kp F3       &kp F4       &kp F5       &kp F6                          &kp F7     &kp F8       &kp F9       &kp F10  &kp F11    &kp F12
            &kp GRAVE       &kp EXCL        &kp AT       &kp HASH     &kp DOLLAR   &kp PRCNT                       &kp CARET  &kp AMPS     &kp STAR     &kp LPAR &kp RPAR   &kp TILDE
            &rgb_ug RGB_BRD &rgb_ug RGB_BRI &trans       &trans       &trans       &trans       &trans     &trans  &kp MINUS  &kp PLUS     &kp LBRC     &kp RBRC &kp PIPE   &trans
            &bt BT_CLR      &trans          &trans       &kp C_AL_LOCK                                                &trans     &trans       &trans       &rgb_ug RGB_COLOR_HSB(128,100,1)
            >;
        };


        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   <   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |
            bindings = <
            &trans    &trans &trans &trans  &trans  &trans                       &trans      &trans    &trans    &trans   &trans    &trans
            &kp GRAVE &kp N1 &kp N2 &kp N3  &kp N4  &kp N5                       &kp N6      &kp N7    &kp N8    &kp N9   &kp N0    &trans
            &kp F1    &kp F2 &kp F3 &kp F4  &kp F5  &kp F6                       &trans      &kp LEFT  &kp DOWN  &kp UP   &kp RIGHT &trans
            &kp F7    &kp F8 &kp F9 &kp F10 &kp F11 &kp F12   &trans   &trans    &kp KP_PLUS &kp MINUS &kp EQUAL &kp LBKT &kp RBKT  &kp BSLH
            &trans  &trans  &trans    &trans   &trans    &trans      &studio_unlock    &trans
            >;
        };

    };
};

&led_strip {
    chain-length = <29>;
};

&nice_view_spi {
    cs-gpios = <&gpio0 8 GPIO_ACTIVE_HIGH>;
};